---------------------------------------  DAY2 ------------------------------------------------

--- 1. Alter Table

/* Add a new column linkedin_profile to employees table to store LinkedIn URLs as varchar */

ALTER TABLE employees
ADD COLUMN linkedin_profile VARCHAR(100);

select * from employees;

/* Change the linkedin_profile column data type from VARCHAR to TEXT */

ALTER TABLE employees
ALTER COLUMN linkedin_profile TYPE TEXT;


/* Add unique, not null constraint to linkedin_profile */

 -- Updating linkedin_profile values to some value as it cannot be set to NOT NULL if it has NULL
 -- Values


UPDATE employees SET linkedin_profile = 'https://linkedin.com/' || '-' || employeeid 
WHERE linkedin_profile IS NOT NULL;

SELECT * FROM employees;

ALTER TABLE employees
ALTER COLUMN linkedin_profile SET NOT NULL,
ADD CONSTRAINT unique_linkedin_profile UNIQUE (linkedin_profile);


/* Drop column linkedin_profile */

ALTER TABLE employees
DROP COLUMN linkedin_profile;


SELECT * FROM employees;


/* 2)      Querying (Select) */

/* Retrieve the first name, last name, and title of all employees */

select employeename,title from employees;

/* Find all unique unit prices of products */

select * from products;

select DISTINCT unitprice from products;

/*  List all customers sorted by company name in ascending order */

select * from customers;

select customerid,contactname,companyname
from customers
order by companyname asc;

/* Display product name and unit price, but rename the unit_price column as price_in_usd */
 select productname,unitprice as price_in_usd
 from products;


 ---- 3. Filtering ----

 /* Get all customers from Germany. */

 select customerid 
 from customers
 where country = 'Germany';

 /* Find all customers from France or Spain */

 select customerid 
 from customers
 where country IN ('Spain','France');

 /* Retrieve all orders placed in 2014 (based on order_date), 
 and either have freight greater than 50 or the shipped 
 date available (i.e., non-NULL)  (Hint: EXTRACT(YEAR FROM order_date)) */

 select * from orders;

 select orderid 
 from orders
 where EXTRACT(YEAR FROM orderdate) = 2014 AND
 (freight>50 OR shippeddate is NOT NULL);


 ----------- 4)      Filtering ------------------

 /* Retrieve the product_id, product_name, 
 and unit_price of products where the unit_price is greater than 15. */

 select * from products;

 select productid,productname
 from products where unitprice>15;

 /*List all employees who are located in the USA and have the title 
 "Sales Representative".*/

select * from employees; 

select employeename
from employees
where country = 'USA' AND title = 'Sales Representative';

/*•	Retrieve all products that are not discontinued and priced greater than 30.*/

select productname 
from products
where discontinued = 'false' AND unitprice>30;


------- 5) LIMIT/FETCH -------------

/* Retrieve the first 10 orders from the orders table. */
select * 
from orders
limit 10;


/* Retrieve orders starting from the 11th order, fetching 10 rows (i.e., fetch rows 11-20).*/
select * 
from orders
limit 10
offset 10;


--------------- 6)      Filtering (IN, BETWEEN) -----------------

/* •	List all customers who are either Sales Representative, Owner */

select customerid,contactname 
from customers
where contacttitle IN ('Sales Representative','Owner');

/* •	Retrieve orders placed between January 1, 2013, and December 31, 2013.*/

select * from orders ;

select * 
from orders
where orderdate BETWEEN '2013-01-01' AND '2013-12-31';


----------- 7)      Filtering ------------------

/* •	List all products whose category_id is not 1, 2, or 3. */

select * from products;

select categoryid,productname 
from products
where categoryid NOT IN ('1','2','3')
order by categoryid asc;

/* •	Find customers whose company name starts with "A".*/

select * from customers;

select contactname,companyname
from customers
where companyname LIKE 'A%';


/* 8)       INSERT into orders table:

 Task: Add a new order to the orders table with the following details:
Order ID: 11078
Customer ID: ALFKI
Employee ID: 5
Order Date: 2025-04-23
Required Date: 2025-04-30
Shipped Date: 2025-04-25
shipperID:2
Freight: 45.50

*/

select * from orders;

INSERT INTO orders (orderid, customerid, employeeid, orderdate, requireddate, shippeddate,
shipperid,freight)
values(11078, 'ALFKI', 5, '2025-04-23', 
  '2025-04-30', '2025-04-25', 2, 45.50);

select * from orders where orderid = 11078;



/* 9)      Increase(Update)  the unit price of all products in category_id =2 by 10%.
(HINT: unit_price =unit_price * 1.10)
*/

select * from products;


update products
set unitprice = unitprice*1.10;


/*

10) Sample Northwind database:
Download
 Download northwind.sql from below link into your local. Sign in to Git first https://github.com/pthom/northwind_psql
 Manually Create the database using pgAdmin:
 Right-click on "Databases" → Create → Database
Give name as ‘northwind’ (all small letters)
Click ‘Save’

Import database:
 Open pgAdmin and connect to your server          	
  Select the database  ‘northwind’
  Right Click-> Query tool.
  Click the folder icon to open your northwind.sql file
 Press F5 or click the Execute button.
  You will see total 14 tables loaded
  Databases → your database → Schemas → public → Tables

*/
